{"version":3,"sources":["components/Footer.js","actions/userActions.js","constants/userConstants.js","components/SearchBox.js","components/Header.js","constants/orderConstants.js","components/Rating.js","components/Product.js","components/Loader.js","components/Message.js","actions/productAcions.js","constants/productConstants.js","components/Paginate.js","components/ProductCarousel.js","components/Meta.js","screens/HomeScreen.js","screens/ProductScreen.js","actions/cartActions.js","constants/cartConstant.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ProfileScreen.js","actions/orderActions.js","components/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","screens/ProductListScreen.js","screens/ProductEditScreen.js","screens/OrderListScreen.js","App.js","serviceWorker.js","store.js","reducers/productReducers.js","reducers/cartReducers.js","reducers/userReducers.js","reducers/orderReducers.js","index.js"],"names":["Footer","Container","Row","Col","className","getUserDetails","id","dispatch","getState","a","type","userInfo","userLogin","config","headers","Authorization","token","axios","get","data","payload","response","message","SearchBox","history","useState","keyword","setKeyword","Form","onSubmit","e","preventDefault","trim","push","inline","Control","name","onChange","target","value","placeholder","Button","variant","Header","useSelector","state","useDispatch","Navbar","bg","expand","collapseOnSelect","to","Brand","Toggle","aria-controls","Collapse","render","Nav","Link","NavDropdown","title","Item","onClick","localStorage","removeItem","isAdmin","Rating","text","color","style","defaultProps","Product","product","Card","_id","Img","src","image","Body","Title","as","Text","rating","numReviews","price","Loader","Spinner","animation","role","width","height","margin","display","Message","children","Alert","listProducts","pageNumber","listProductDetails","Paginate","pages","page","Pagination","Array","keys","map","x","key","active","ProductCarousel","productTopRated","loading","error","products","useEffect","Carousel","pause","Image","alt","fluid","Caption","Meta","description","keywords","Helmet","content","HomeScreen","match","params","productList","sm","md","lg","xl","ProductScreen","qty","setQty","setRating","comment","setComment","productDetails","productCreateReview","errorProdcutReview","successProductReview","success","alert","ListGroup","countInStock","disabled","reviews","length","review","createdAt","substring","productId","post","Group","controlId","Label","row","addToCart","setItem","JSON","stringify","cart","cartItems","CartScreen","location","search","split","console","log","removeFromCartHandler","removeFromCart","item","rounded","Number","reduce","acc","toFixed","FormContainer","xs","LoginScreen","email","setEmail","password","setPassword","redirect","login","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","userRegister","register","ProfileScreen","userDetails","user","userUpdateProfile","orderListMy","loadingOrders","errorOrders","orders","put","updateUserProfile","Table","striped","bordered","hover","responsive","order","totalPrice","isPaid","paidAt","isDelivered","deliveredAt","substrong","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","shippingAddress","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","required","PaymentScreen","paymentMethod","setPaymentMethod","Check","label","checked","PlaceOrderScreen","addDecimals","num","Math","round","itemsPrice","shippingPrice","taxPrice","orderCreate","index","createOrder","orderItems","OrderScreen","orderId","sdkReady","setSdkReady","orderDetails","orderPay","successPay","loadingPay","orderDeliver","successDeliver","loadingDeliver","addPayPalScript","clientId","script","document","createElement","asnyc","onload","body","appendChild","window","paypal","href","amount","onSuccess","paymentResult","payOrder","deliverOrder","UserListScreen","userList","users","successDelete","userDelete","deleteHandler","confirm","delete","deleteUser","UserEditScreen","userId","setIsAdmin","userUpdate","loadingUpdate","errorUpdate","successUpdate","updateUser","ProductListScreen","productDelete","loadingDelete","errorDelete","productCreate","loadingCreate","errorCreate","successCreate","createdProduct","deleteProduct","category","brand","ProductEditScreen","setPrice","setImage","setBrand","setCategory","countInStocks","setCountInStocks","setDescription","uploading","setUploading","productUpdate","uploadFileHandler","file","files","formData","FormData","append","updateProduct","File","custom","OrderListScreen","orderList","App","path","component","exact","Boolean","hostname","reducer","combineReducers","action","existItem","find","filter","cartItemsFromStorage","getItem","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.c8d72807.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer>\r\n      <Container>\r\n        <Row>\r\n          <Col className=\"text-center py-3\">Copyright &copy; ProShop</Col>\r\n        </Row>\r\n      </Container>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import {\r\n  USER_DELETE_FAIL,\r\n  USER_DELETE_REQUEST,\r\n  USER_DELETE_SUCCESS,\r\n  USER_DETAILS_FAIL,\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_RESET,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_LIST_FAIL,\r\n  USER_LIST_REQUEST,\r\n  USER_LIST_RESET,\r\n  USER_LIST_SUCCESS,\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_FAIL,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_UPDATE_FAIL,\r\n  USER_UPDATE_PROFILE_FAIL,\r\n  USER_UPDATE_PROFILE_REQUEST,\r\n  USER_UPDATE_PROFILE_SUCCESS,\r\n  USER_UPDATE_REQUEST,\r\n  USER_UPDATE_SUCCESS\r\n} from \"../constants/userConstants\";\r\nimport axios from \"axios\";\r\nimport { ORDER_LIST_MY_RESET } from \"../constants/orderConstants\";\r\n\r\nexport const login = (email, password) => async dispatch => {\r\n  try {\r\n    dispatch({\r\n      type: USER_LOGIN_REQUEST\r\n    });\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    };\r\n\r\n    const { data } = await axios.post(\r\n      \"/api/users/login\",\r\n      { email, password },\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data\r\n    });\r\n\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LOGIN_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message\r\n    });\r\n  }\r\n};\r\n\r\nexport const logout = () => dispatch => {\r\n  localStorage.removeItem(\"userInfo\");\r\n  dispatch({\r\n    type: USER_LOGOUT\r\n  });\r\n  dispatch({\r\n    type: USER_DETAILS_RESET\r\n  });\r\n  dispatch({\r\n    type: ORDER_LIST_MY_RESET\r\n  });\r\n  dispatch({\r\n    type: USER_LIST_RESET\r\n  });\r\n};\r\n\r\nexport const register = (name, email, password) => async dispatch => {\r\n  try {\r\n    dispatch({\r\n      type: USER_REGISTER_REQUEST\r\n    });\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    };\r\n\r\n    const { data } = await axios.post(\r\n      \"/api/users\",\r\n      { name, email, password },\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: USER_REGISTER_SUCCESS,\r\n      payload: data\r\n    });\r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data\r\n    });\r\n\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_REGISTER_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message\r\n    });\r\n  }\r\n};\r\n\r\nexport const getUserDetails = id => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_DETAILS_REQUEST\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo }\r\n    } = getState();\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`\r\n      }\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/users/${id}`, config);\r\n\r\n    dispatch({\r\n      type: USER_DETAILS_SUCCESS,\r\n      payload: data\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateUserProfile = user => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_REQUEST\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo }\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`\r\n      }\r\n    };\r\n\r\n    const { data } = await axios.put(`/api/users/profile`, user, config);\r\n\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_SUCCESS,\r\n      payload: data\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message\r\n    });\r\n  }\r\n};\r\n\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_LIST_REQUEST\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo }\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`\r\n      }\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/users`, config);\r\n\r\n    dispatch({\r\n      type: USER_LIST_SUCCESS,\r\n      payload: data\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteUser = id => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_DELETE_REQUEST\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo }\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`\r\n      }\r\n    };\r\n\r\n    await axios.delete(`/api/users/${id}`, config);\r\n\r\n    dispatch({\r\n      type: USER_DELETE_SUCCESS\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_DELETE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateUser = user => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_UPDATE_REQUEST\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo }\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`\r\n      }\r\n    };\r\n    console.log(\"user :>> \", user);\r\n    const { data } = await axios.put(`/api/users/${user._id}`, user, config);\r\n    console.log(data);\r\n    dispatch({\r\n      type: USER_UPDATE_SUCCESS\r\n    });\r\n\r\n    dispatch({\r\n      type: USER_DETAILS_SUCCESS,\r\n      payload: data\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_UPDATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message\r\n    });\r\n  }\r\n};\r\n","export const USER_LOGIN_REQUEST = \"USER_LOGIN_REQUEST\";\r\nexport const USER_LOGIN_SUCCESS = \"USER_LOGIN_SUCCESS\";\r\nexport const USER_LOGIN_FAIL = \"USER_LOGIN_FAIL\";\r\nexport const USER_LOGOUT = \"USER_LOGOUT\";\r\n\r\nexport const USER_REGISTER_REQUEST = \"USER_REGISTER_REQUEST\";\r\nexport const USER_REGISTER_SUCCESS = \"USER_REGISTER_SUCCESS\";\r\nexport const USER_REGISTER_FAIL = \"USER_REGISTER_FAIL\";\r\n\r\nexport const USER_DETAILS_REQUEST = \"USER_DETAILS_REQUEST\";\r\nexport const USER_DETAILS_SUCCESS = \"USER_DETAILS_SUCCESS\";\r\nexport const USER_DETAILS_FAIL = \"USER_DETAILS_FAIL\";\r\nexport const USER_DETAILS_RESET = \"USER_DETAILS_RESET\";\r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST = \"USER_UPDATE_PROFILE_REQUEST\";\r\nexport const USER_UPDATE_PROFILE_SUCCESS = \"USER_UPDATE_PROFILE_SUCCESS\";\r\nexport const USER_UPDATE_PROFILE_FAIL = \"USER_UPDATE_PROFILE_FAIL\";\r\nexport const USER_UPDATE_PROFILE_RESET = \"USER_UPDATE_PROFILE_RESET\";\r\n\r\nexport const USER_LIST_REQUEST = \"USER_LIST_REQUEST\";\r\nexport const USER_LIST_SUCCESS = \"USER_LIST_SUCCESS\";\r\nexport const USER_LIST_FAIL = \"USER_LIST_FAIL\";\r\nexport const USER_LIST_RESET = \"USER_LIST_RESET\";\r\n\r\nexport const USER_DELETE_REQUEST = \"USER_DELETE_REQUEST\";\r\nexport const USER_DELETE_SUCCESS = \"USER_DELETE_SUCCESS\";\r\nexport const USER_DELETE_FAIL = \"USER_DELETE_FAIL\";\r\n\r\nexport const USER_UPDATE_REQUEST = \"USER_UPDATE_REQUEST\";\r\nexport const USER_UPDATE_SUCCESS = \"USER_UPDATE_SUCCESS\";\r\nexport const USER_UPDATE_FAIL = \"USER_UPDATE_FAIL\";\r\nexport const USER_UPDATE_RESET = \"USER_UPDATE_RESET\";\r\n","import React, { useState } from \"react\";\r\nimport { Button, Form } from \"react-bootstrap\";\r\n\r\nconst SearchBox = ({ history }) => {\r\n  const [keyword, setKeyword] = useState(\"\");\r\n\r\n  const submitHandler = e => {\r\n    e.preventDefault();\r\n    if (keyword.trim()) {\r\n      history.push(`/search/${keyword}`);\r\n    } else {\r\n      history.push(`/`);\r\n    }\r\n  };\r\n  return (\r\n    <Form onSubmit={submitHandler} inline>\r\n      <Form.Control\r\n        type=\"text\"\r\n        name=\"q\"\r\n        onChange={e => setKeyword(e.target.value)}\r\n        placeholder=\"Search Products...\"\r\n        className=\"mr-sm-2 ml-sm-5\"\r\n      ></Form.Control>\r\n      <Button type=\"submit\" variant=\"outline-success\" className=\"p-2\">\r\n        Search\r\n      </Button>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import React from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Nav, Navbar, Container, NavDropdown } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { logout } from \"../actions/userActions\";\r\nimport SearchBox from \"./SearchBox\";\r\n\r\nconst Header = () => {\r\n  const { userInfo } = useSelector(state => state.userLogin);\r\n  const dispatch = useDispatch();\r\n  const logoutHandler = () => {\r\n    dispatch(logout());\r\n  };\r\n  return (\r\n    <header>\r\n      <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" collapseOnSelect>\r\n        <Container>\r\n          <LinkContainer to=\"/\">\r\n            <Navbar.Brand>Proshop</Navbar.Brand>\r\n          </LinkContainer>\r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n          <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <Route render={({ history }) => <SearchBox history={history} />} />\r\n\r\n            <Nav className=\"ml-auto\">\r\n              <LinkContainer to=\"/cart\">\r\n                <Nav.Link>\r\n                  <i className=\"fas fa-shopping-cart\"></i> Cart\r\n                </Nav.Link>\r\n              </LinkContainer>\r\n              {userInfo ? (\r\n                <NavDropdown title={userInfo.name} id=\"username\">\r\n                  <LinkContainer to=\"/profile\">\r\n                    <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <NavDropdown.Item onClick={logoutHandler}>\r\n                    Logout\r\n                  </NavDropdown.Item>\r\n                </NavDropdown>\r\n              ) : (\r\n                <LinkContainer to=\"/login\">\r\n                  <Nav.Link>\r\n                    <i className=\"fas fa-user\"></i> Sign In\r\n                  </Nav.Link>\r\n                </LinkContainer>\r\n              )}\r\n              {userInfo && userInfo.isAdmin && (\r\n                <NavDropdown title=\"Admin\" id=\"adminMenu\">\r\n                  <LinkContainer to=\"/admin/userlist\">\r\n                    <NavDropdown.Item>Users</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <LinkContainer to=\"/admin/productlist\">\r\n                    <NavDropdown.Item>Products</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <LinkContainer to=\"/admin/orderlist\">\r\n                    <NavDropdown.Item>Orders</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                </NavDropdown>\r\n              )}\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","export const ORDER_CREATE_REQUEST = \"ORDER_CREATE_REQUEST\";\r\nexport const ORDER_CREATE_SUCCESS = \"ORDER_CREATE_SUCCESS\";\r\nexport const ORDER_CREATE_FAIL = \"ORDER_CREATE_FAIL\";\r\n\r\nexport const ORDER_DETAILS_REQUEST = \"ORDER_DETAILS_REQUEST\";\r\nexport const ORDER_DETAILS_SUCCESS = \"ORDER_DETAILS_SUCCESS\";\r\nexport const ORDER_DETAILS_FAIL = \"ORDER_DETAILS_FAIL\";\r\n\r\nexport const ORDER_PAY_REQUEST = \"ORDER_PAY_REQUEST\";\r\nexport const ORDER_PAY_SUCCESS = \"ORDER_PAY_SUCCESS\";\r\nexport const ORDER_PAY_FAIL = \"ORDER_PAY_FAIL\";\r\nexport const ORDER_PAY_RESET = \"ORDER_PAY_RESET\";\r\n\r\nexport const ORDER_LIST_MY_REQUEST = \"ORDER_LIST_MY_REQUEST\";\r\nexport const ORDER_LIST_MY_SUCCESS = \"ORDER_LIST_MY_SUCCESS\";\r\nexport const ORDER_LIST_MY_FAIL = \"ORDER_LIST_MY_FAIL\";\r\nexport const ORDER_LIST_MY_RESET = \"ORDER_LIST_MY_RESET\";\r\n\r\nexport const ORDER_LIST_REQUEST = \"ORDER_LIST_REQUEST\";\r\nexport const ORDER_LIST_SUCCESS = \"ORDER_LIST_SUCCESS\";\r\nexport const ORDER_LIST_FAIL = \"ORDER_LIST_FAIL\";\r\n\r\nexport const ORDER_DELIVER_REQUEST = \"ORDER_DELIVER_REQUEST\";\r\nexport const ORDER_DELIVER_SUCCESS = \"ORDER_DELIVER_SUCCESS\";\r\nexport const ORDER_DELIVER_FAIL = \"ORDER_DELIVER_FAIL\";\r\nexport const ORDER_DELIVER_RESET = \"ORDER_DELIVER_RESET\";\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Rating = ({ value, text, color }) => {\r\n  return (\r\n    <div className=\"rating\">\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 1\r\n              ? 'fas fa-star'\r\n              : value >= 0.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 2\r\n              ? 'fas fa-star'\r\n              : value >= 1.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 3\r\n              ? 'fas fa-star'\r\n              : value >= 2.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 4\r\n              ? 'fas fa-star'\r\n              : value >= 3.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 5\r\n              ? 'fas fa-star'\r\n              : value >= 4.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }\r\n        ></i>\r\n      </span>\r\n      <div> {text && text}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nRating.defaultProps = {\r\n  color: '#f8e825',\r\n};\r\n\r\nRating.propTypes = {\r\n  value: PropTypes.number.isRequired,\r\n  text: PropTypes.string.isRequired,\r\n  color: PropTypes.string,\r\n};\r\nexport default Rating;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport Rating from \"./Rating\";\r\n\r\nconst Product = ({ product }) => {\r\n  return (\r\n    <Card className=\"my-3 p-3 rounded\">\r\n      <Link to={`/product/${product._id}`}>\r\n        <Card.Img src={product.image} variant=\"top\" />\r\n      </Link>\r\n\r\n      <Card.Body>\r\n        <Link to={`/product/${product._id}`}>\r\n          <Card.Title as=\"div\">\r\n            <strong>{product.name}</strong>\r\n          </Card.Title>\r\n        </Link>\r\n\r\n        <Card.Text as=\"div\">\r\n          <div className=\"my-3\">\r\n            <Rating\r\n              value={product.rating}\r\n              text={`${product.numReviews} reviews`}\r\n            />\r\n          </div>\r\n        </Card.Text>\r\n\r\n        <Card.Text as=\"h3\">${product.price}</Card.Text>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Product;\r\n","import React from 'react';\r\nimport { Spinner } from 'react-bootstrap';\r\n\r\nexport default function Loader() {\r\n  return (\r\n    <Spinner\r\n      animation=\"border\"\r\n      role=\"status\"\r\n      style={{\r\n        width: '100px',\r\n        height: '100px',\r\n        margin: 'auto',\r\n        display: 'block',\r\n      }}\r\n    >\r\n      <span className=\"sr-only\">Loading...</span>\r\n    </Spinner>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Alert } from 'react-bootstrap';\r\n\r\nconst Message = ({ variant, children }) => {\r\n  return <Alert variant={variant}>{children}</Alert>;\r\n};\r\n\r\nMessage.defaultProps = {\r\n  variant: 'info',\r\n};\r\nexport default Message;\r\n","import {\r\n  PRODUCT_CREATE_FAIL,\r\n  PRODUCT_CREATE_REQUEST,\r\n  PRODUCT_CREATE_REVIEW_FAIL,\r\n  PRODUCT_CREATE_REVIEW_REQUEST,\r\n  PRODUCT_CREATE_REVIEW_SUCCESS,\r\n  PRODUCT_CREATE_SUCCESS,\r\n  PRODUCT_DELETE_FAIL,\r\n  PRODUCT_DELETE_REQUEST,\r\n  PRODUCT_DELETE_SUCCESS,\r\n  PRODUCT_DETAIL_FAIL,\r\n  PRODUCT_DETAIL_REQUEST,\r\n  PRODUCT_DETAIL_SUCCESS,\r\n  PRODUCT_LIST_FAIL,\r\n  PRODUCT_LIST_REQUEST,\r\n  PRODUCT_LIST_SUCCESS,\r\n  PRODUCT_TOP_FAIL,\r\n  PRODUCT_TOP_REQUEST,\r\n  PRODUCT_TOP_SUCCESS,\r\n  PRODUCT_UPDATE_FAIL,\r\n  PRODUCT_UPDATE_REQUEST,\r\n  PRODUCT_UPDATE_SUCCESS\r\n} from \"../constants/productConstants\";\r\nimport axios from \"axios\";\r\n\r\nexport const listProducts = (\r\n  keyword = \"\",\r\n  pageNumber = \"\"\r\n) => async dispatch => {\r\n  try {\r\n    dispatch({\r\n      type: PRODUCT_LIST_REQUEST\r\n    });\r\n\r\n    const { data } = await axios.get(\r\n      `/api/products?keyword=${keyword}&pageNumber=${pageNumber}`\r\n    );\r\n\r\n    dispatch({\r\n      type: PRODUCT_LIST_SUCCESS,\r\n      payload: data\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message\r\n    });\r\n  }\r\n};\r\n\r\nexport const listProductDetails = id => async dispatch => {\r\n  try {\r\n    dispatch({\r\n      type: PRODUCT_DETAIL_REQUEST\r\n    });\r\n\r\n    const { data } = await axios.get(`/api/products/${id}`);\r\n\r\n    dispatch({\r\n      type: PRODUCT_DETAIL_SUCCESS,\r\n      payload: data\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_DETAIL_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteProduct = id => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: PRODUCT_DELETE_REQUEST\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo }\r\n    } = getState();\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`\r\n      }\r\n    };\r\n\r\n    await axios.delete(`/api/products/${id}`, config);\r\n\r\n    dispatch({\r\n      type: PRODUCT_DELETE_SUCCESS\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_DELETE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message\r\n    });\r\n  }\r\n};\r\n\r\nexport const createProduct = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: PRODUCT_CREATE_REQUEST\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo }\r\n    } = getState();\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`\r\n      }\r\n    };\r\n\r\n    const { data } = await axios.post(`/api/products`, {}, config);\r\n\r\n    dispatch({\r\n      type: PRODUCT_CREATE_SUCCESS,\r\n      payload: data\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_CREATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateProduct = product => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: PRODUCT_UPDATE_REQUEST\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo }\r\n    } = getState();\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`\r\n      }\r\n    };\r\n\r\n    const { data } = await axios.put(\r\n      `/api/products/${product._id}`,\r\n      product,\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: PRODUCT_UPDATE_SUCCESS,\r\n      payload: data\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_UPDATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message\r\n    });\r\n  }\r\n};\r\n\r\nexport const createProductReview = (productId, review) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: PRODUCT_CREATE_REVIEW_REQUEST\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo }\r\n    } = getState();\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`\r\n      }\r\n    };\r\n\r\n    await axios.post(`/api/products/${productId}/reviews`, review, config);\r\n\r\n    dispatch({\r\n      type: PRODUCT_CREATE_REVIEW_SUCCESS\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_CREATE_REVIEW_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message\r\n    });\r\n  }\r\n};\r\n\r\nexport const listTopProducts = () => async dispatch => {\r\n  try {\r\n    dispatch({\r\n      type: PRODUCT_TOP_REQUEST\r\n    });\r\n\r\n    const { data } = await axios.get(`/api/products/top`);\r\n\r\n    dispatch({\r\n      type: PRODUCT_TOP_SUCCESS,\r\n      payload: data\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_TOP_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message\r\n    });\r\n  }\r\n};\r\n","export const PRODUCT_LIST_REQUEST = \"PRODUCT_LIST_REQUEST\";\r\nexport const PRODUCT_LIST_SUCCESS = \"PRODUCT_LIST_SUCCESS\";\r\nexport const PRODUCT_LIST_FAIL = \"PRODUCT_LIST_FAIL\";\r\n\r\nexport const PRODUCT_DETAIL_REQUEST = \"PRODUCT_DETAIL_REQUEST\";\r\nexport const PRODUCT_DETAIL_SUCCESS = \"PRODUCT_DETAIL_SUCCESS\";\r\nexport const PRODUCT_DETAIL_FAIL = \"PRODUCT_DETAIL_FAIL\";\r\n\r\nexport const PRODUCT_DELETE_REQUEST = \"PRODUCT_DELETE_REQUEST\";\r\nexport const PRODUCT_DELETE_SUCCESS = \"PRODUCT_DELETE_SUCCESS\";\r\nexport const PRODUCT_DELETE_FAIL = \"PRODUCT_DELETE_FAIL\";\r\n\r\nexport const PRODUCT_CREATE_REQUEST = \"PRODUCT_CREATE_REQUEST\";\r\nexport const PRODUCT_CREATE_SUCCESS = \"PRODUCT_CREATE_SUCCESS\";\r\nexport const PRODUCT_CREATE_FAIL = \"PRODUCT_CREATE_FAIL\";\r\nexport const PRODUCT_CREATE_RESET = \"PRODUCT_CREATE_RESET\";\r\n\r\nexport const PRODUCT_UPDATE_REQUEST = \"PRODUCT_UPDATE_REQUEST\";\r\nexport const PRODUCT_UPDATE_SUCCESS = \"PRODUCT_UPDATE_SUCCESS\";\r\nexport const PRODUCT_UPDATE_FAIL = \"PRODUCT_UPDATE_FAIL\";\r\nexport const PRODUCT_UPDATE_RESET = \"PRODUCT_UPDATE_RESET\";\r\n\r\nexport const PRODUCT_CREATE_REVIEW_REQUEST = \"PRODUCT_CREATE_REVIEW_REQUEST\";\r\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = \"PRODUCT_CREATE_REVIEW_SUCCESS\";\r\nexport const PRODUCT_CREATE_REVIEW_FAIL = \"PRODUCT_CREATE_REVIEW_FAIL\";\r\nexport const PRODUCT_CREATE_REVIEW_RESET = \"PRODUCT_CREATE_REVIEW_RESET\";\r\n\r\nexport const PRODUCT_TOP_REQUEST = \"PRODUCT_TOP_REQUEST\";\r\nexport const PRODUCT_TOP_SUCCESS = \"PRODUCT_TOP_SUCCESS\";\r\nexport const PRODUCT_TOP_FAIL = \"PRODUCT_TOP_FAIL\";\r\n","import React from \"react\";\r\nimport { Pagination } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\n\r\nconst Paginate = ({ pages, page, isAdmin = false, keyword = \"\" }) => {\r\n  return (\r\n    pages > 1 && (\r\n      <Pagination>\r\n        {[...Array(pages).keys()].map(x => (\r\n          <LinkContainer\r\n            key={x + 1}\r\n            to={\r\n              !isAdmin\r\n                ? keyword\r\n                  ? `/search/${keyword}/page/${x + 1}`\r\n                  : `/page/${x + 1}`\r\n                : `/admin/productlist/page/${x + 1}`\r\n            }\r\n          >\r\n            <Pagination.Item active={x + 1 === page}>{x + 1}</Pagination.Item>\r\n          </LinkContainer>\r\n        ))}\r\n      </Pagination>\r\n    )\r\n  );\r\n};\r\n\r\nexport default Paginate;\r\n","import React, { useEffect } from \"react\";\r\nimport { Carousel, Image } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { listTopProducts } from \"../actions/productAcions\";\r\nimport Loader from \"./Loader\";\r\nimport Message from \"./Message\";\r\n\r\nconst ProductCarousel = () => {\r\n  const dispatch = useDispatch();\r\n  const { loading, error, products } = useSelector(\r\n    state => state.productTopRated\r\n  );\r\n\r\n  useEffect(() => {\r\n    dispatch(listTopProducts());\r\n  }, [dispatch]);\r\n\r\n  return loading ? (\r\n    <Loader />\r\n  ) : error ? (\r\n    <Message variant=\"danger\">{error}</Message>\r\n  ) : (\r\n    <Carousel pause=\"hover\" className=\"bg-dark\">\r\n      {products.map(product => (\r\n        <Carousel.Item key={product._id}>\r\n          <Link to={`/product/${product._id}`}>\r\n            <Image src={product.image} alt={product.name} fluid />\r\n            <Carousel.Caption className=\"carousel-caption\">\r\n              <h4>\r\n                {product.name} (${product.price})\r\n              </h4>\r\n            </Carousel.Caption>\r\n          </Link>\r\n        </Carousel.Item>\r\n      ))}\r\n    </Carousel>\r\n  );\r\n};\r\n\r\nexport default ProductCarousel;\r\n","import React from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nconst Meta = ({ title, description, keywords }) => {\r\n  return (\r\n    <Helmet>\r\n      <title>{title}</title>\r\n      <meta name=\"description\" content={description} />\r\n      <meta name=\"keyword\" content={keywords} />\r\n    </Helmet>\r\n  );\r\n};\r\n\r\nMeta.defaultProps = {\r\n  title: \"Welcome To Proshop\",\r\n  description: \"We sell the best products for cheap\",\r\n  keywords: \"electronics, buy electronics, cheap electronics\"\r\n};\r\nexport default Meta;\r\n","import React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Col, Row } from \"react-bootstrap\";\r\nimport Product from \"../components/Product\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { listProducts } from \"../actions/productAcions\";\r\nimport Paginate from \"../components/Paginate\";\r\nimport ProductCarousel from \"../components/ProductCarousel\";\r\nimport Meta from \"../components/Meta\";\r\n\r\nconst HomeScreen = ({ match }) => {\r\n  const keyword = match.params.keyword;\r\n  const pageNumber = match.params.pageNumber || 1;\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(listProducts(keyword, pageNumber));\r\n  }, [dispatch, keyword, pageNumber]);\r\n\r\n  const productList = useSelector(state => state.productList);\r\n\r\n  const { loading, error, products, pages, page } = productList;\r\n\r\n  return (\r\n    <>\r\n      <Meta />\r\n      {!keyword ? (\r\n        <ProductCarousel />\r\n      ) : (\r\n        <Link to=\"/\" className=\"btn btn-light\">\r\n          Go Back\r\n        </Link>\r\n      )}\r\n      <h1>Latest Products</h1>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <>\r\n          <Row>\r\n            {products.map(product => (\r\n              <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                <Product product={product} />\r\n              </Col>\r\n            ))}\r\n          </Row>\r\n          <Paginate\r\n            pages={pages}\r\n            page={page}\r\n            keyword={keyword ? keyword : \"\"}\r\n          />\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomeScreen;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  Col,\r\n  Form,\r\n  Image,\r\n  ListGroup,\r\n  Row\r\n} from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  listProductDetails,\r\n  createProductReview\r\n} from \"../actions/productAcions\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport Meta from \"../components/Meta\";\r\nimport Rating from \"../components/Rating\";\r\nimport { PRODUCT_CREATE_REVIEW_RESET } from \"../constants/productConstants\";\r\n\r\nconst ProductScreen = ({ history, match }) => {\r\n  const [qty, setQty] = useState(1);\r\n  const [rating, setRating] = useState(0);\r\n  const [comment, setComment] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const productDetails = useSelector(state => state.productDetails);\r\n  const { loading, error, product } = productDetails;\r\n\r\n  const productCreateReview = useSelector(state => state.productCreateReview);\r\n\r\n  const {\r\n    error: errorProdcutReview,\r\n    success: successProductReview\r\n  } = productCreateReview;\r\n\r\n  const { userInfo } = useSelector(state => state.userLogin);\r\n\r\n  useEffect(() => {\r\n    if (successProductReview) {\r\n      alert(\"Review submitted!\");\r\n      setRating(0);\r\n      setComment(\"\");\r\n    }\r\n\r\n    dispatch({\r\n      type: PRODUCT_CREATE_REVIEW_RESET\r\n    });\r\n\r\n    dispatch(listProductDetails(match.params.id));\r\n  }, [dispatch, match, successProductReview]);\r\n\r\n  const addToCartHandler = () => {\r\n    history.push(`/cart/${match.params.id}?qty=${qty}`);\r\n  };\r\n\r\n  const submitHandler = e => {\r\n    e.preventDefault();\r\n    dispatch(\r\n      createProductReview(match.params.id, {\r\n        rating,\r\n        comment\r\n      })\r\n    );\r\n  };\r\n  return (\r\n    <>\r\n      <Link className=\"btn btn-light my-3\" to=\"/\">\r\n        Go Back\r\n      </Link>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <>\r\n          <Meta title={product.name} />\r\n          <Row>\r\n            <Col md={6}>\r\n              <Image src={product.image} alt={product.name} fluid />\r\n            </Col>\r\n            <Col md={3}>\r\n              <ListGroup variant=\"flush\">\r\n                <ListGroup.Item>\r\n                  <h3>{product.name}</h3>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  <Rating\r\n                    value={product.rating}\r\n                    text={`${product.numReviews} reviews`}\r\n                  />\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>Price: ${product.price}</ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  Description: {product.description}\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Col>\r\n            <Col md={3}>\r\n              <Card>\r\n                <ListGroup variant=\"flush\">\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>Price:</Col>\r\n                      <Col>\r\n                        <strong>${product.price}</strong>\r\n                      </Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>Status:</Col>\r\n                      <Col>\r\n                        {product.countInStock > 0\r\n                          ? `${product.countInStock} In Stock`\r\n                          : \"Out Of Stock\"}\r\n                      </Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n\r\n                  {product.countInStock > 0 && (\r\n                    <ListGroup.Item>\r\n                      <Row>\r\n                        <Col>Qty</Col>\r\n                        <Col>\r\n                          <Form.Control\r\n                            as=\"select\"\r\n                            value={qty}\r\n                            onChange={e => setQty(e.target.value)}\r\n                          >\r\n                            {[...Array(product.countInStock).keys()].map(x => (\r\n                              <option key={x + 1} value={x + 1}>\r\n                                {x + 1}\r\n                              </option>\r\n                            ))}\r\n                          </Form.Control>\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  )}\r\n                  <ListGroup.Item>\r\n                    <Button\r\n                      onClick={addToCartHandler}\r\n                      className=\"btn-block\"\r\n                      type=\"button\"\r\n                      disabled={product.countInStock === 0}\r\n                    >\r\n                      Add To Cart\r\n                    </Button>\r\n                  </ListGroup.Item>\r\n                </ListGroup>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"mt-3\">\r\n            <Col md={6}>\r\n              <h2>Reviews</h2>\r\n              {product.reviews.length === 0 && <Message>No Reviews</Message>}\r\n              <ListGroup variant=\"flush\">\r\n                {product.reviews.map(review => (\r\n                  <ListGroup.Item key={review._id}>\r\n                    <strong>{review.name}</strong>\r\n                    <Rating value={review.rating} />\r\n                    <p>{review.createdAt.substring(0, 10)}</p>\r\n                    <p>{review.comment}</p>\r\n                  </ListGroup.Item>\r\n                ))}\r\n                <ListGroup.Item>\r\n                  <h2>Write a Customer Review</h2>\r\n                  {errorProdcutReview && (\r\n                    <Message variant=\"danger\">{errorProdcutReview}</Message>\r\n                  )}\r\n                  {userInfo ? (\r\n                    <Form onSubmit={submitHandler}>\r\n                      <Form.Group controlId=\"rating\">\r\n                        <Form.Label>Rating</Form.Label>\r\n                        <Form.Control\r\n                          as=\"select\"\r\n                          value={rating}\r\n                          onChange={e => setRating(e.target.value)}\r\n                        >\r\n                          <option value=\"\">Select...</option>\r\n                          <option value=\"1\">1 - Poor</option>\r\n                          <option value=\"2\">2 - Fair</option>\r\n                          <option value=\"3\">3 - Good</option>\r\n                          <option value=\"4\">4 - Very Good</option>\r\n                          <option value=\"5\">5 - Excellent</option>\r\n                        </Form.Control>\r\n                      </Form.Group>\r\n                      <Form.Group controlId=\"comment\">\r\n                        <Form.Label>Comment</Form.Label>\r\n                        <Form.Control\r\n                          as=\"textarea\"\r\n                          row=\"3\"\r\n                          value={comment}\r\n                          onChange={e => setComment(e.target.value)}\r\n                        ></Form.Control>\r\n                      </Form.Group>\r\n                      <Button type=\"submit\" variant=\"primary\">\r\n                        Submit\r\n                      </Button>\r\n                    </Form>\r\n                  ) : (\r\n                    <Message>\r\n                      Please <Link to=\"/login\">sign in</Link> to write a review.\r\n                    </Message>\r\n                  )}\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Col>\r\n          </Row>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductScreen;\r\n","import axios from \"axios\";\r\nimport {\r\n  CART_ADD_ITEM,\r\n  CART_REMOVE_ITEM,\r\n  CART_SAVE_PAYMENT_METHOD,\r\n  CART_SAVE_SHIPPING_ADDRESS\r\n} from \"../constants/cartConstant\";\r\n\r\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\r\n  const { data } = await axios.get(`/api/products/${id}`);\r\n\r\n  dispatch({\r\n    type: CART_ADD_ITEM,\r\n    payload: {\r\n      product: data._id,\r\n      name: data.name,\r\n      image: data.image,\r\n      price: data.price,\r\n      countInStock: data.countInStock,\r\n      qty\r\n    }\r\n  });\r\n\r\n  localStorage.setItem(\"cartItems\", JSON.stringify(getState().cart.cartItems));\r\n};\r\n\r\nexport const removeFromCart = id => (dispatch, getState) => {\r\n  dispatch({\r\n    type: CART_REMOVE_ITEM,\r\n    payload: id\r\n  });\r\n\r\n  localStorage.setItem(\"cartItems\", JSON.stringify(getState().cart.cartItems));\r\n};\r\n\r\nexport const saveShippingAddress = data => dispatch => {\r\n  dispatch({\r\n    type: CART_SAVE_SHIPPING_ADDRESS,\r\n    payload: data\r\n  });\r\n\r\n  localStorage.setItem(\"shippingAddress\", JSON.stringify(data));\r\n};\r\n\r\nexport const savePaymentMethod = data => dispatch => {\r\n  dispatch({\r\n    type: CART_SAVE_PAYMENT_METHOD,\r\n    payload: data\r\n  });\r\n\r\n  localStorage.setItem(\"paymentMethod\", JSON.stringify(data));\r\n};\r\n","export const CART_ADD_ITEM = \"CART_ADD_ITEM\";\r\nexport const CART_REMOVE_ITEM = \"CART_REMOVE_ITEM\";\r\nexport const CART_SAVE_SHIPPING_ADDRESS = \"CART_SAVE_SHIPPING_ADDRESS\";\r\nexport const CART_SAVE_PAYMENT_METHOD = \"CART_SAVE_PAYMENT_METHOD\";\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport { Link } from 'react-router-dom';\r\nimport { addToCart, removeFromCart } from '../actions/cartActions';\r\nimport {\r\n  Button,\r\n  Card,\r\n  Col,\r\n  Form,\r\n  Image,\r\n  ListGroup,\r\n  Row,\r\n} from 'react-bootstrap';\r\n\r\nconst CartScreen = ({ match, location, history }) => {\r\n  const productId = match.params.id;\r\n\r\n  const qty = location.search ? location.search.split('=')[1] : 1;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const cart = useSelector((state) => state.cart);\r\n  const { cartItems } = cart;\r\n\r\n  console.log(cartItems);\r\n\r\n  useEffect(() => {\r\n    if (productId) {\r\n      dispatch(addToCart(productId, qty));\r\n    }\r\n  }, [dispatch, productId, qty]);\r\n\r\n  const removeFromCartHandler = (id) => {\r\n    dispatch(removeFromCart(id));\r\n  };\r\n\r\n  const checkoutHandler = () => {\r\n    history.push('/login?redirect=shipping');\r\n  };\r\n  return (\r\n    <Row>\r\n      <Col md={8}>\r\n        <h1>Shopping Cart</h1>\r\n        {cartItems.length === 0 ? (\r\n          <Message>\r\n            Your cart is empty <Link to=\"/\">Go Back</Link>\r\n          </Message>\r\n        ) : (\r\n          <ListGroup variant=\"flush\">\r\n            {cartItems.map((item) => (\r\n              <ListGroup.Item key={item.product}>\r\n                <Row>\r\n                  <Col md={2}>\r\n                    <Image src={item.image} alt={item.name} fluid rounded />\r\n                  </Col>\r\n                  <Col md={3}>\r\n                    <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                  </Col>\r\n                  <Col md={2}>${item.price}</Col>\r\n                  <Col md={2}>\r\n                    <Form.Control\r\n                      as=\"select\"\r\n                      value={item.qty}\r\n                      onChange={(e) =>\r\n                        dispatch(\r\n                          addToCart(item.product, Number(e.target.value))\r\n                        )\r\n                      }\r\n                    >\r\n                      {[...Array(item.countInStock).keys()].map((x) => (\r\n                        <option key={x + 1} value={x + 1}>\r\n                          {x + 1}\r\n                        </option>\r\n                      ))}\r\n                    </Form.Control>\r\n                  </Col>\r\n                  <Col md={2}>\r\n                    <Button\r\n                      type=\"button\"\r\n                      variant=\"light\"\r\n                      onClick={() => removeFromCartHandler(item.product)}\r\n                    >\r\n                      <i className=\"fas fa-trash\"></i>\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n            ))}\r\n          </ListGroup>\r\n        )}\r\n      </Col>\r\n      <Col md={4}>\r\n        <Card>\r\n          <ListGroup variant=\"flush\">\r\n            <ListGroup.Item>\r\n              <h3>\r\n                Subtotal (\r\n                {cartItems.reduce((acc, item) => acc + Number(item.qty), 0)})\r\n                items\r\n              </h3>\r\n              $\r\n              {cartItems\r\n                .reduce((acc, item) => acc + item.qty * item.price, 0)\r\n                .toFixed(2)}\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <Button\r\n                type=\"button\"\r\n                className=\"btn-block\"\r\n                disabled={cartItems.length === 0}\r\n                onClick={checkoutHandler}\r\n              >\r\n                Proceed To Checkout\r\n              </Button>\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default CartScreen;\r\n","import React from \"react\";\r\nimport { Col, Container, Row } from \"react-bootstrap\";\r\n\r\nconst FormContainer = ({ children }) => {\r\n  return (\r\n    <Container>\r\n      <Row className=\"justify-content-md-center\">\r\n        <Col xs={12} md={6}>\r\n          {children}\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default FormContainer;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport { login } from \"../actions/userActions\";\r\nimport FormContainer from \"../components/FormContainer\";\r\n\r\nconst LoginScreen = ({ location, history }) => {\r\n  const dispatch = useDispatch();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const { loading, error, userInfo } = useSelector(state => state.userLogin);\r\n\r\n  const redirect = location.search ? location.search.split(\"=\")[1] : \"/\";\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(redirect);\r\n    }\r\n  }, [history, userInfo, redirect]);\r\n  const submitHandler = e => {\r\n    e.preventDefault();\r\n    dispatch(login(email, password));\r\n  };\r\n  return (\r\n    <FormContainer>\r\n      <h1>Sign In</h1>\r\n      {error && <Message variant=\"danger\">{error}</Message>}\r\n      {loading && <Loader />}\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId=\"email\">\r\n          <Form.Label>Email Address</Form.Label>\r\n          <Form.Control\r\n            type=\"email\"\r\n            placeholder=\"Enter email\"\r\n            value={email}\r\n            onChange={e => setEmail(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Form.Group controlId=\"password\">\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            placeholder=\"Enter Password\"\r\n            value={password}\r\n            onChange={e => setPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Button type=\"submit\" variant=\"primary\">\r\n          Sign In\r\n        </Button>\r\n      </Form>\r\n      <Row className=\"py-3\">\r\n        <Col>\r\n          New Customer?{\" \"}\r\n          <Link to={redirect ? `/register?redirect=${redirect}` : `/register`}>\r\n            Register\r\n          </Link>\r\n        </Col>\r\n      </Row>\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nexport default LoginScreen;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport { register } from \"../actions/userActions\";\r\nimport FormContainer from \"../components/FormContainer\";\r\n\r\nconst RegisterScreen = ({ location, history }) => {\r\n  const dispatch = useDispatch();\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [message, setMessage] = useState(null);\r\n\r\n  const { loading, error, userInfo } = useSelector(state => state.userRegister);\r\n\r\n  const redirect = location.search ? location.search.split(\"=\")[1] : \"/\";\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(redirect);\r\n    }\r\n  }, [history, userInfo, redirect]);\r\n\r\n  const submitHandler = e => {\r\n    e.preventDefault();\r\n    // DISPATCH REGISTER\r\n    if (password !== confirmPassword) {\r\n      setMessage(\"Passwords do not match\");\r\n    } else {\r\n      dispatch(register(name, email, password));\r\n    }\r\n  };\r\n  return (\r\n    <FormContainer>\r\n      <h1>Sign Up</h1>\r\n      {message && <Message variant=\"danger\">{message}</Message>}\r\n      {error && <Message variant=\"danger\">{error}</Message>}\r\n      {loading && <Loader />}\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId=\"name\">\r\n          <Form.Label>Name</Form.Label>\r\n          <Form.Control\r\n            type=\"name\"\r\n            placeholder=\"Enter name\"\r\n            value={name}\r\n            onChange={e => setName(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Form.Group controlId=\"email\">\r\n          <Form.Label>Email Address</Form.Label>\r\n          <Form.Control\r\n            type=\"email\"\r\n            placeholder=\"Enter email\"\r\n            value={email}\r\n            onChange={e => setEmail(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Form.Group controlId=\"password\">\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            placeholder=\"Enter Password\"\r\n            value={password}\r\n            onChange={e => setPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Form.Group controlId=\"confirmPassword\">\r\n          <Form.Label>Confirm Password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            placeholder=\"Confirm Password\"\r\n            value={confirmPassword}\r\n            onChange={e => setConfirmPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Button type=\"submit\" variant=\"primary\">\r\n          Register\r\n        </Button>\r\n      </Form>\r\n      <Row className=\"py-3\">\r\n        <Col>\r\n          Have an Account?{\" \"}\r\n          <Link to={redirect ? `/login?redirect=${redirect}` : `/login`}>\r\n            Login\r\n          </Link>\r\n        </Col>\r\n      </Row>\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nexport default RegisterScreen;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Form, Button, Row, Col, Table } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport { getUserDetails, updateUserProfile } from \"../actions/userActions\";\r\nimport { listMyOrder } from \"../actions/orderActions\";\r\n\r\nconst ProfileScreen = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [message, setMessage] = useState(null);\r\n\r\n  const { loading, error, user } = useSelector(state => state.userDetails);\r\n\r\n  const { userInfo } = useSelector(state => state.userLogin);\r\n  const { success } = useSelector(state => state.userUpdateProfile);\r\n\r\n  const { loading: loadingOrders, error: errorOrders, orders } = useSelector(\r\n    state => state.orderListMy\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/login\");\r\n    } else {\r\n      if (!user.name) {\r\n        dispatch(getUserDetails(\"profile\"));\r\n        dispatch(listMyOrder());\r\n      } else {\r\n        setName(user.name);\r\n        setEmail(user.email);\r\n      }\r\n    }\r\n  }, [dispatch, history, userInfo, user]);\r\n\r\n  const submitHandler = e => {\r\n    e.preventDefault();\r\n    if (password !== confirmPassword) {\r\n      setMessage(\"Passwords do not match\");\r\n    } else {\r\n      dispatch(updateUserProfile({ id: user._id, name, email, password }));\r\n    }\r\n  };\r\n  return (\r\n    <Row>\r\n      <Col md={3}>\r\n        <h2>User Profile</h2>\r\n        {message && <Message variant=\"danger\">{message}</Message>}\r\n        {error && <Message variant=\"danger\">{error}</Message>}\r\n        {success && <Message variant=\"success\">Profile Updated!</Message>}\r\n        {loading && <Loader />}\r\n        <Form onSubmit={submitHandler}>\r\n          <Form.Group controlId=\"name\">\r\n            <Form.Label>Name</Form.Label>\r\n            <Form.Control\r\n              type=\"name\"\r\n              placeholder=\"Enter name\"\r\n              value={name}\r\n              onChange={e => setName(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Form.Group controlId=\"email\">\r\n            <Form.Label>Email Address</Form.Label>\r\n            <Form.Control\r\n              type=\"email\"\r\n              placeholder=\"Enter email\"\r\n              value={email}\r\n              onChange={e => setEmail(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Form.Group controlId=\"password\">\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              placeholder=\"Enter Password\"\r\n              value={password}\r\n              onChange={e => setPassword(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Form.Group controlId=\"confirmPassword\">\r\n            <Form.Label>Confirm Password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              placeholder=\"Confirm Password\"\r\n              value={confirmPassword}\r\n              onChange={e => setConfirmPassword(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Button type=\"submit\" variant=\"primary\">\r\n            Update\r\n          </Button>\r\n        </Form>\r\n      </Col>\r\n      <Col md={9}>\r\n        <h2>My Orders</h2>\r\n        {loadingOrders ? (\r\n          <Loader />\r\n        ) : errorOrders ? (\r\n          <Message variant=\"danger\">{errorOrders}</Message>\r\n        ) : (\r\n          <Table striped bordered hover responsive className=\"table-sm\">\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>DATE</th>\r\n                <th>TOTAL</th>\r\n                <th>PAID</th>\r\n                <th>DELIVERED</th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {orders.map(order => (\r\n                <tr key={order._id}>\r\n                  <td>{order._id}</td>\r\n                  <td>{order.createdAt.substring(0, 10)}</td>\r\n                  <td>{order.totalPrice}</td>\r\n                  <td>\r\n                    {order.isPaid ? (\r\n                      order.paidAt.substring(0, 10)\r\n                    ) : (\r\n                      <i className=\"fas fa-times\" style={{ color: \"red\" }}></i>\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    {order.isDelivered ? (\r\n                      order.deliveredAt.substrong(0, 10)\r\n                    ) : (\r\n                      <i className=\"fas fa-times\" style={{ color: \"red\" }}></i>\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    <LinkContainer to={`/order/${order._id}`}>\r\n                      <Button className=\"btn-sm\" variant=\"light\">\r\n                        Details\r\n                      </Button>\r\n                    </LinkContainer>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        )}\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default ProfileScreen;\r\n","import {\r\n  ORDER_CREATE_REQUEST,\r\n  ORDER_CREATE_SUCCESS,\r\n  ORDER_CREATE_FAIL,\r\n  ORDER_DETAILS_REQUEST,\r\n  ORDER_DETAILS_SUCCESS,\r\n  ORDER_DETAILS_FAIL,\r\n  ORDER_PAY_REQUEST,\r\n  ORDER_PAY_SUCCESS,\r\n  ORDER_PAY_FAIL,\r\n  ORDER_LIST_MY_REQUEST,\r\n  ORDER_LIST_MY_SUCCESS,\r\n  ORDER_LIST_MY_FAIL,\r\n  ORDER_LIST_REQUEST,\r\n  ORDER_LIST_SUCCESS,\r\n  ORDER_LIST_FAIL,\r\n  ORDER_DELIVER_REQUEST,\r\n  ORDER_DELIVER_SUCCESS,\r\n  ORDER_DELIVER_FAIL\r\n} from \"../constants/orderConstants\";\r\n\r\nimport axios from \"axios\";\r\nexport const createOrder = order => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_CREATE_REQUEST\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo }\r\n    } = getState();\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`\r\n      }\r\n    };\r\n\r\n    const { data } = await axios.post(`/api/orders`, order, config);\r\n\r\n    dispatch({\r\n      type: ORDER_CREATE_SUCCESS,\r\n      payload: data\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_CREATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message\r\n    });\r\n  }\r\n};\r\n\r\nexport const getOrderDetails = id => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_DETAILS_REQUEST\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo }\r\n    } = getState();\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`\r\n      }\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/orders/${id}`, config);\r\n\r\n    dispatch({\r\n      type: ORDER_DETAILS_SUCCESS,\r\n      payload: data\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message\r\n    });\r\n  }\r\n};\r\n\r\nexport const payOrder = (orderId, paymentResult) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_PAY_REQUEST\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo }\r\n    } = getState();\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`\r\n      }\r\n    };\r\n\r\n    const { data } = await axios.put(\r\n      `/api/orders/${orderId}/pay`,\r\n      paymentResult,\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: ORDER_PAY_SUCCESS,\r\n      payload: data\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_PAY_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message\r\n    });\r\n  }\r\n};\r\n\r\nexport const deliverOrder = order => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_DELIVER_REQUEST\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo }\r\n    } = getState();\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`\r\n      }\r\n    };\r\n\r\n    const { data } = await axios.put(\r\n      `/api/orders/${order._id}/deliver`,\r\n      {},\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: ORDER_DELIVER_SUCCESS,\r\n      payload: data\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_DELIVER_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message\r\n    });\r\n  }\r\n};\r\n\r\nexport const listMyOrder = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_LIST_MY_REQUEST\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo }\r\n    } = getState();\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`\r\n      }\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/orders/myorders`, config);\r\n\r\n    dispatch({\r\n      type: ORDER_LIST_MY_SUCCESS,\r\n      payload: data\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_LIST_MY_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message\r\n    });\r\n  }\r\n};\r\n\r\nexport const listOrders = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_LIST_REQUEST\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo }\r\n    } = getState();\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`\r\n      }\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/orders`, config);\r\n\r\n    dispatch({\r\n      type: ORDER_LIST_SUCCESS,\r\n      payload: data\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message\r\n    });\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport { Nav } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\n\r\nconst CheckoutSteps = ({ step1, step2, step3, step4 }) => {\r\n  return (\r\n    <Nav className=\"justify-content-center mb-4\">\r\n      <Nav.Item>\r\n        {step1 ? (\r\n          <LinkContainer to=\"/login\">\r\n            <Nav.Link>Sign in</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Sign In</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n      <Nav.Item>\r\n        {step2 ? (\r\n          <LinkContainer to=\"/shipping\">\r\n            <Nav.Link>Shipping</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Shipping</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n      <Nav.Item>\r\n        {step3 ? (\r\n          <LinkContainer to=\"/payment\">\r\n            <Nav.Link>Payment</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Payment</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n      <Nav.Item>\r\n        {step4 ? (\r\n          <LinkContainer to=\"/placeorder\">\r\n            <Nav.Link>Place Order</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Place Order</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n    </Nav>\r\n  );\r\n};\r\n\r\nexport default CheckoutSteps;\r\n","import React, { useState } from \"react\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport { saveShippingAddress } from \"../actions/cartActions\";\r\nimport CheckoutSteps from \"../components/CheckoutSteps\";\r\n\r\nconst ShippingScreen = ({ history }) => {\r\n  const { shippingAddress } = useSelector(state => state.cart);\r\n  const dispatch = useDispatch();\r\n\r\n  const [address, setAddress] = useState(shippingAddress.address);\r\n  const [city, setCity] = useState(shippingAddress.city);\r\n  const [postalCode, setPostalCode] = useState(shippingAddress.postalCode);\r\n  const [country, setCountry] = useState(shippingAddress.country);\r\n\r\n  const submitHandler = e => {\r\n    e.preventDefault();\r\n    dispatch(saveShippingAddress({ address, city, postalCode, country }));\r\n    history.push(\"/payment\");\r\n  };\r\n\r\n  return (\r\n    <FormContainer>\r\n      <CheckoutSteps step1 step2 />\r\n      <h1>Shipping</h1>\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId=\"address\">\r\n          <Form.Label>Address</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Enter Address\"\r\n            value={address}\r\n            required\r\n            onChange={e => setAddress(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Form.Group controlId=\"city\">\r\n          <Form.Label>City</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Enter City\"\r\n            value={city}\r\n            required\r\n            onChange={e => setCity(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"postalCode\">\r\n          <Form.Label>Postal Code</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Enter postal code\"\r\n            value={postalCode}\r\n            required\r\n            onChange={e => setPostalCode(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"country\">\r\n          <Form.Label>Country</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Enter country\"\r\n            value={country}\r\n            required\r\n            onChange={e => setCountry(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Button type=\"submit\" variant=\"primary\">\r\n          Continue\r\n        </Button>\r\n      </Form>\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nexport default ShippingScreen;\r\n","import React, { useState } from \"react\";\r\nimport { Form, Button, Col } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport { savePaymentMethod } from \"../actions/cartActions\";\r\nimport CheckoutSteps from \"../components/CheckoutSteps\";\r\n\r\nconst PaymentScreen = ({ history }) => {\r\n  const { shippingAddress } = useSelector(state => state.cart);\r\n  const dispatch = useDispatch();\r\n\r\n  if (!shippingAddress) {\r\n    history.push(\"/shipping\");\r\n  }\r\n\r\n  const [paymentMethod, setPaymentMethod] = useState(\"PayPal\");\r\n\r\n  const submitHandler = e => {\r\n    e.preventDefault();\r\n    dispatch(savePaymentMethod(paymentMethod));\r\n    history.push(\"/placeorder\");\r\n  };\r\n\r\n  return (\r\n    <FormContainer>\r\n      <CheckoutSteps step1 step2 step3 />\r\n      <h1>Payment Method</h1>\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group>\r\n          <Form.Label as=\"legend\">Select Method</Form.Label>\r\n          <Col>\r\n            <Form.Check\r\n              type=\"radio\"\r\n              label=\"PayPal or Credit Card\"\r\n              id=\"PayPal\"\r\n              name=\"paymentMethod\"\r\n              value=\"PayPal\"\r\n              checked\r\n              onChange={e => setPaymentMethod(e.target.value)}\r\n            ></Form.Check>\r\n            {/* <Form.Check\r\n              type=\"radio\"\r\n              label=\"Stripe\"\r\n              id=\"Stripe\"\r\n              name=\"paymentMethod\"\r\n              value=\"Stripe\"\r\n              checked\r\n              onChange={e => setPaymentMethod(e.target.value)}\r\n            ></Form.Check> */}\r\n          </Col>\r\n        </Form.Group>\r\n        <Button type=\"submit\" variant=\"primary\">\r\n          Continue\r\n        </Button>\r\n      </Form>\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nexport default PaymentScreen;\r\n","import React, { useEffect } from \"react\";\r\nimport { Button, Card, Col, Image, ListGroup, Row } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { createOrder } from \"../actions/orderActions\";\r\nimport CheckoutSteps from \"../components/CheckoutSteps\";\r\nimport Message from \"../components/Message\";\r\n\r\nconst PlaceOrderScreen = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const cart = useSelector(state => state.cart);\r\n\r\n  // Calculate prices\r\n  const addDecimals = num => {\r\n    return (Math.round(num * 100) / 100).toFixed(2);\r\n  };\r\n\r\n  cart.itemsPrice = addDecimals(\r\n    cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n  );\r\n\r\n  cart.shippingPrice = addDecimals(cart.itemsPrice > 100 ? 0 : 100);\r\n\r\n  cart.taxPrice = addDecimals(Number((0.15 * cart.itemsPrice).toFixed(2)));\r\n\r\n  cart.totalPrice = (\r\n    Number(cart.itemsPrice) +\r\n    Number(cart.shippingPrice) +\r\n    Number(cart.taxPrice)\r\n  ).toFixed(2);\r\n\r\n  const orderCreate = useSelector(state => state.orderCreate);\r\n  const { order, success, error } = orderCreate;\r\n\r\n  useEffect(() => {\r\n    if (success) {\r\n      history.push(`/order/${order._id}`);\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [history, success]);\r\n\r\n  const placeOrderHandler = () => {\r\n    dispatch(\r\n      createOrder({\r\n        orderItems: cart.cartItems,\r\n        shippingAddress: cart.shippingAddress,\r\n        paymentMethod: cart.paymentMethod,\r\n        itemsPrice: cart.itemsPrice,\r\n        shippingPrice: cart.shippingPrice,\r\n        taxPrice: cart.taxPrice,\r\n        totalPrice: cart.totalPrice\r\n      })\r\n    );\r\n  };\r\n  return (\r\n    <>\r\n      <CheckoutSteps step1 step2 step3 step4 />>\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant=\"flush\">\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n              <p>\r\n                <strong>Address: </strong>\r\n                {cart.shippingAddress.address}, {cart.shippingAddress.city}{\" \"}\r\n                {cart.shippingAddress.postalCode},{\" \"}\r\n                {cart.shippingAddress.country}\r\n              </p>\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <h2>Payment Method</h2>\r\n              <strong>Method: </strong>\r\n              {cart.paymentMethod}\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n              {cart.cartItems.length === 0 ? (\r\n                <Message>Your cart is empty</Message>\r\n              ) : (\r\n                <ListGroup variant=\"flush\">\r\n                  {cart.cartItems.map((item, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <Row>\r\n                        <Col md={1}>\r\n                          <Image\r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            fluid\r\n                            rounded\r\n                          />\r\n                        </Col>\r\n                        <Col>\r\n                          <Link to={`/product/${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                          {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant=\"flush\">\r\n              <ListGroup.Item>\r\n                <h2>Order Summary</h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>${cart.itemsPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping</Col>\r\n                  <Col>${cart.shippingPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax</Col>\r\n                  <Col>${cart.taxPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total</Col>\r\n                  <Col>${cart.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                {error && <Message variant=\"danger\">{error}</Message>}\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Button\r\n                  type=\"button\"\r\n                  className=\"btn-block\"\r\n                  disabled={cart.cartItems === 0}\r\n                  onClick={placeOrderHandler}\r\n                >\r\n                  Place Order\r\n                </Button>\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PlaceOrderScreen;\r\n","import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Card, Col, Image, ListGroup, Row, Button } from \"react-bootstrap\";\r\nimport { PayPalButton } from \"react-paypal-button-v2\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  getOrderDetails,\r\n  payOrder,\r\n  deliverOrder\r\n} from \"../actions/orderActions\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport {\r\n  ORDER_PAY_RESET,\r\n  ORDER_DELIVER_RESET\r\n} from \"../constants/orderConstants\";\r\n\r\nconst OrderScreen = ({ match, history }) => {\r\n  const dispatch = useDispatch();\r\n  const orderId = match.params.id;\r\n\r\n  const [sdkReady, setSdkReady] = useState(false);\r\n\r\n  const orderDetails = useSelector(state => state.orderDetails);\r\n  const { order, loading, error } = orderDetails;\r\n\r\n  const orderPay = useSelector(state => state.orderPay);\r\n  const { success: successPay, loading: loadingPay } = orderPay;\r\n\r\n  const orderDeliver = useSelector(state => state.orderDeliver);\r\n  const { success: successDeliver, loading: loadingDeliver } = orderDeliver;\r\n\r\n  const { userInfo } = useSelector(state => state.userLogin);\r\n\r\n  if (!loading) {\r\n    // Calculate prices\r\n    const addDecimals = num => {\r\n      return (Math.round(num * 100) / 100).toFixed(2);\r\n    };\r\n\r\n    order.itemsPrice = addDecimals(\r\n      order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n    );\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/login\");\r\n    }\r\n\r\n    const addPayPalScript = async () => {\r\n      const { data: clientId } = await axios.get(\"/api/config/paypal\");\r\n      const script = document.createElement(\"script\");\r\n      script.type = \"text/javascript\";\r\n      script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`;\r\n      script.asnyc = true;\r\n      script.onload = () => {\r\n        setSdkReady(true);\r\n      };\r\n      document.body.appendChild(script);\r\n    };\r\n\r\n    if (!order || successPay || successDeliver) {\r\n      dispatch({\r\n        type: ORDER_PAY_RESET\r\n      });\r\n      dispatch({\r\n        type: ORDER_DELIVER_RESET\r\n      });\r\n\r\n      dispatch(getOrderDetails(orderId));\r\n    } else if (!order.isPaid) {\r\n      if (!window.paypal) {\r\n        addPayPalScript();\r\n      } else {\r\n        setSdkReady(true);\r\n      }\r\n    }\r\n  }, [dispatch, orderId, successPay, order, successDeliver, history, userInfo]);\r\n\r\n  const successPaymentHandler = paymentResult => {\r\n    console.log(paymentResult);\r\n    dispatch(payOrder(orderId, paymentResult));\r\n  };\r\n\r\n  const deliverHandler = () => {\r\n    dispatch(deliverOrder(order));\r\n  };\r\n  console.log(\"sdkReady\", sdkReady);\r\n  return loading ? (\r\n    <Loader />\r\n  ) : error ? (\r\n    <Message variant=\"danger\">{error}</Message>\r\n  ) : (\r\n    <>\r\n      {\" \"}\r\n      <h1>Order {order._id} </h1>\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant=\"flush\">\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n              <p>\r\n                <strong>Name: </strong> {order.user.name}\r\n              </p>\r\n              <p>\r\n                <strong>Email: </strong>{\" \"}\r\n                <a href={`mailto:${order.user.email}`}>{order.user.email}</a>\r\n              </p>\r\n              <p>\r\n                <strong>Address: </strong>\r\n                {order.shippingAddress.address}, {order.shippingAddress.city}{\" \"}\r\n                {order.shippingAddress.postalCode},{\" \"}\r\n                {order.shippingAddress.country}\r\n              </p>\r\n              {order.isDelivered ? (\r\n                <Message variant=\"success\">\r\n                  Delivered on {order.deliveredAt}{\" \"}\r\n                </Message>\r\n              ) : (\r\n                <Message variant=\"danger\">Not Delivered</Message>\r\n              )}\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <h2>Payment Method</h2>\r\n              <p>\r\n                <strong>Method: </strong>\r\n                {order.paymentMethod}\r\n              </p>\r\n              {order.isPaid ? (\r\n                <Message variant=\"success\">Paid on {order.paidAt} </Message>\r\n              ) : (\r\n                <Message variant=\"danger\">Not Paid</Message>\r\n              )}\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n              {order.orderItems.length === 0 ? (\r\n                <Message>Order is empty</Message>\r\n              ) : (\r\n                <ListGroup variant=\"flush\">\r\n                  {order.orderItems.map((item, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <Row>\r\n                        <Col md={1}>\r\n                          <Image\r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            fluid\r\n                            rounded\r\n                          />\r\n                        </Col>\r\n                        <Col>\r\n                          <Link to={`/product/${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                          {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant=\"flush\">\r\n              <ListGroup.Item>\r\n                <h2>Order Summary</h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>${order.itemsPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping</Col>\r\n                  <Col>${order.shippingPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax</Col>\r\n                  <Col>${order.taxPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total</Col>\r\n                  <Col>${order.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              {!order.isPaid && (\r\n                <ListGroup.Item>\r\n                  {loadingPay && <Loader />}\r\n                  {!sdkReady ? (\r\n                    <Loader />\r\n                  ) : (\r\n                    <PayPalButton\r\n                      amount={order.totalPrice}\r\n                      onSuccess={successPaymentHandler}\r\n                    />\r\n                  )}\r\n                </ListGroup.Item>\r\n              )}\r\n              {loadingDeliver && <Loader />}\r\n              {userInfo &&\r\n                userInfo.isAdmin &&\r\n                order.isPaid &&\r\n                !order.isDelivered && (\r\n                  <ListGroup.Item>\r\n                    <Button\r\n                      type=\"button\"\r\n                      className=\"btn btn-block\"\r\n                      onClick={deliverHandler}\r\n                    >\r\n                      Mark As Delivered\r\n                    </Button>\r\n                  </ListGroup.Item>\r\n                )}\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OrderScreen;\r\n","import React, { useEffect } from \"react\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { Table, Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport { deleteUser, listUsers } from \"../actions/userActions\";\r\n\r\nconst UserListScreen = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const { loading, error, users } = useSelector(state => state.userList);\r\n\r\n  const { userInfo } = useSelector(state => state.userLogin);\r\n  const { success: successDelete } = useSelector(state => state.userDelete);\r\n\r\n  useEffect(() => {\r\n    if (userInfo && userInfo.isAdmin) {\r\n      dispatch(listUsers());\r\n    } else {\r\n      history.push(\"/login\");\r\n    }\r\n  }, [dispatch, history, successDelete, userInfo]);\r\n\r\n  const deleteHandler = id => {\r\n    if (window.confirm(\"Are you sure ?\")) {\r\n      dispatch(deleteUser(id));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Users</h1>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <Table striped bordered hover responsive className=\"table-sm\">\r\n          <thead>\r\n            <tr>\r\n              <td>ID</td>\r\n              <td>NAME</td>\r\n              <td>EMAIL</td>\r\n              <td>ADMIN</td>\r\n              <td></td>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {users.map(user => (\r\n              <tr key={user._id}>\r\n                <td>{user._id}</td>\r\n                <td>{user.name}</td>\r\n                <td>\r\n                  <a href={`mailto:${user.email}`}>{user.email}</a>\r\n                </td>\r\n                <td>\r\n                  {user.isAdmin ? (\r\n                    <i className=\"fas fa-check\" style={{ color: \"green\" }}></i>\r\n                  ) : (\r\n                    <i className=\"fas fa-times\" style={{ color: \"red\" }}></i>\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  <LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n                    <Button variant=\"light\" className=\"btn-sm\">\r\n                      <i className=\"fas fa-edit\"></i>\r\n                    </Button>\r\n                  </LinkContainer>\r\n                  <Button\r\n                    variant=\"danger\"\r\n                    className=\"btn-sm\"\r\n                    onClick={() => deleteHandler(user._id)}\r\n                  >\r\n                    <i className=\"fas fa-trash\"></i>\r\n                  </Button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserListScreen;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Button, Form } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getUserDetails, updateUser } from \"../actions/userActions\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport { USER_UPDATE_RESET } from \"../constants/userConstants\";\r\n\r\nconst UserEditScreen = ({ match, location, history }) => {\r\n  const userId = match.params.id;\r\n  const dispatch = useDispatch();\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n\r\n  const { loading, error, user } = useSelector(state => state.userDetails);\r\n  const {\r\n    loading: loadingUpdate,\r\n    error: errorUpdate,\r\n    success: successUpdate\r\n  } = useSelector(state => state.userUpdate);\r\n\r\n  useEffect(() => {\r\n    if (!user) {\r\n      history.push(\"/\");\r\n    }\r\n    if (successUpdate) {\r\n      dispatch({\r\n        type: USER_UPDATE_RESET\r\n      });\r\n      history.push(\"/admin/userlist\");\r\n    } else {\r\n      if (!user.name || user._id !== userId) {\r\n        dispatch(getUserDetails(userId));\r\n      } else {\r\n        setName(user.name);\r\n        setEmail(user.email);\r\n        setIsAdmin(user.isAdmin);\r\n      }\r\n    }\r\n  }, [user, dispatch, userId, successUpdate, history]);\r\n\r\n  const submitHandler = e => {\r\n    e.preventDefault();\r\n    // console.log({ _id: userId, name, email, isAdmin });\r\n    dispatch(updateUser({ _id: userId, name, email, isAdmin }));\r\n  };\r\n  return (\r\n    <>\r\n      <Link to=\"/admin/userlist\" className=\"btn btn-light my-3\">\r\n        Go Back\r\n      </Link>\r\n\r\n      <FormContainer>\r\n        <h1>Edit User</h1>\r\n        {loadingUpdate && <Loader />}\r\n        {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <Message variant=\"danger\">{error}</Message>\r\n        ) : (\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId=\"name\">\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter name\"\r\n                value={name}\r\n                onChange={e => setName(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"email\">\r\n              <Form.Label>Email Address</Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                placeholder=\"Enter email\"\r\n                value={email}\r\n                onChange={e => setEmail(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"isadmin\">\r\n              <Form.Check\r\n                type=\"checkbox\"\r\n                label=\"Is Admin\"\r\n                checked={isAdmin}\r\n                onChange={e => setIsAdmin(e.target.checked)}\r\n              ></Form.Check>\r\n            </Form.Group>\r\n\r\n            <Button type=\"submit\" variant=\"primary\">\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </FormContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserEditScreen;\r\n","import React, { useEffect } from \"react\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { Table, Button, Row, Col } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport {\r\n  listProducts,\r\n  deleteProduct,\r\n  createProduct\r\n} from \"../actions/productAcions\";\r\nimport { PRODUCT_CREATE_RESET } from \"../constants/productConstants\";\r\nimport Paginate from \"../components/Paginate\";\r\nconst ProductListScreen = ({ history, match }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const pageNumber = match.params.pageNumber || 1;\r\n\r\n  const { loading, error, products, pages, page } = useSelector(\r\n    state => state.productList\r\n  );\r\n\r\n  const {\r\n    loading: loadingDelete,\r\n    error: errorDelete,\r\n    success: successDelete\r\n  } = useSelector(state => state.productDelete);\r\n\r\n  const {\r\n    loading: loadingCreate,\r\n    error: errorCreate,\r\n    success: successCreate,\r\n    product: createdProduct\r\n  } = useSelector(state => state.productCreate);\r\n\r\n  const { userInfo } = useSelector(state => state.userLogin);\r\n\r\n  useEffect(() => {\r\n    dispatch({\r\n      type: PRODUCT_CREATE_RESET\r\n    });\r\n\r\n    if (!userInfo.isAdmin) {\r\n      history.push(\"/login\");\r\n    }\r\n\r\n    if (successCreate) {\r\n      history.push(`/admin/product/${createdProduct._id}/edit`);\r\n    } else {\r\n      dispatch(listProducts(\"\", pageNumber));\r\n    }\r\n  }, [\r\n    dispatch,\r\n    history,\r\n    userInfo,\r\n    successDelete,\r\n    successCreate,\r\n    createdProduct,\r\n    pageNumber\r\n  ]);\r\n\r\n  const deleteHandler = id => {\r\n    if (window.confirm(\"Are you sure ?\")) {\r\n      dispatch(deleteProduct(id));\r\n    }\r\n  };\r\n\r\n  const createProductHandler = () => {\r\n    // CREATE PRODUCT\r\n    dispatch(createProduct());\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Row className=\"align-items-center\">\r\n        <Col>\r\n          <h1>Prodcuts</h1>\r\n        </Col>\r\n        <Col className=\"text-right\">\r\n          <Button className=\"my-3\" onClick={createProductHandler}>\r\n            <i className=\"fas fa-plus\"></i> Create Product\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n      {loadingDelete && <Loader />}\r\n      {errorDelete && <Message variant=\"danger\">{errorDelete}</Message>}\r\n\r\n      {loadingCreate && <Loader />}\r\n      {errorCreate && <Message variant=\"danger\">{errorCreate}</Message>}\r\n\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <>\r\n          <Table striped bordered hover responsive className=\"table-sm\">\r\n            <thead>\r\n              <tr>\r\n                <td>ID</td>\r\n                <td>NAME</td>\r\n                <td>PRICE</td>\r\n                <td>CATEGORY</td>\r\n                <td>BRAND</td>\r\n                <td></td>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {products.map(product => (\r\n                <tr key={product._id}>\r\n                  <td>{product._id}</td>\r\n                  <td>{product.name}</td>\r\n                  <td>${product.price}</td>\r\n                  <td>{product.category}</td>\r\n                  <td>{product.brand}</td>\r\n                  <td>\r\n                    <LinkContainer to={`/admin/product/${product._id}/edit`}>\r\n                      <Button variant=\"light\" className=\"btn-sm\">\r\n                        <i className=\"fas fa-edit\"></i>\r\n                      </Button>\r\n                    </LinkContainer>\r\n                    <Button\r\n                      variant=\"danger\"\r\n                      className=\"btn-sm\"\r\n                      onClick={() => deleteHandler(product._id)}\r\n                    >\r\n                      <i className=\"fas fa-trash\"></i>\r\n                    </Button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n          <Paginate pages={pages} page={page} isAdmin={true} />\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductListScreen;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Button, Form } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { listProductDetails, updateProduct } from \"../actions/productAcions\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport { PRODUCT_UPDATE_RESET } from \"../constants/productConstants\";\r\nimport axios from \"axios\";\r\n\r\nconst ProductEditScreen = ({ match, location, history }) => {\r\n  const productId = match.params.id;\r\n  const dispatch = useDispatch();\r\n  const [name, setName] = useState(\"\");\r\n  const [price, setPrice] = useState(0);\r\n  const [image, setImage] = useState(\"\");\r\n  const [brand, setBrand] = useState(\"\");\r\n  const [category, setCategory] = useState(\"\");\r\n  const [countInStocks, setCountInStocks] = useState(0);\r\n  const [description, setDescription] = useState(\"\");\r\n  const [uploading, setUploading] = useState(false);\r\n  const { user } = useSelector(state => state.userDetails);\r\n\r\n  const { loading, error, product } = useSelector(\r\n    state => state.productDetails\r\n  );\r\n\r\n  const {\r\n    loading: loadingUpdate,\r\n    error: errorUpdate,\r\n    success: successUpdate\r\n  } = useSelector(state => state.productUpdate);\r\n\r\n  useEffect(() => {\r\n    if (!user) {\r\n      history.push(\"/\");\r\n    }\r\n    if (successUpdate) {\r\n      dispatch({\r\n        type: PRODUCT_UPDATE_RESET\r\n      });\r\n      history.push(\"/admin/productlist\");\r\n    } else {\r\n      if (!product.name || product._id !== productId) {\r\n        dispatch(listProductDetails(productId));\r\n      } else {\r\n        setName(product.name);\r\n        setPrice(product.price);\r\n        setImage(product.image);\r\n        setBrand(product.brand);\r\n        setCategory(product.category);\r\n        setCountInStocks(product.countInStocks);\r\n        setDescription(product.description);\r\n      }\r\n    }\r\n  }, [user, dispatch, productId, product, successUpdate, history]);\r\n\r\n  const uploadFileHandler = async e => {\r\n    const file = e.target.files[0];\r\n    const formData = new FormData();\r\n    formData.append(\"image\", file);\r\n    setUploading(true);\r\n\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\"\r\n        }\r\n      };\r\n      const { data } = await axios.post(\"/api/upload\", formData, config);\r\n      setImage(data);\r\n      setUploading(false);\r\n    } catch (err) {\r\n      console.error(err);\r\n      setUploading(false);\r\n    }\r\n  };\r\n  const submitHandler = e => {\r\n    e.preventDefault();\r\n    dispatch(\r\n      updateProduct({\r\n        _id: productId,\r\n        name,\r\n        price,\r\n        image,\r\n        brand,\r\n        category,\r\n        description,\r\n        countInStocks\r\n      })\r\n    );\r\n  };\r\n  return (\r\n    <>\r\n      <Link to=\"/admin/productlist\" className=\"btn btn-light my-3\">\r\n        Go Back\r\n      </Link>\r\n\r\n      <FormContainer>\r\n        <h1>Edit Product</h1>\r\n        {loadingUpdate && <Loader />}\r\n        {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <Message variant=\"danger\">{error}</Message>\r\n        ) : (\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId=\"name\">\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter name\"\r\n                value={name}\r\n                onChange={e => setName(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"price\">\r\n              <Form.Label>Price</Form.Label>\r\n              <Form.Control\r\n                type=\"number\"\r\n                placeholder=\"Enter price\"\r\n                value={price}\r\n                onChange={e => setPrice(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"image\">\r\n              <Form.Label>Image</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter image url\"\r\n                value={image}\r\n                onChange={e => setImage(e.target.value)}\r\n              ></Form.Control>\r\n              <Form.File\r\n                id=\"image-file\"\r\n                label=\"Choose File\"\r\n                custom\r\n                onChange={uploadFileHandler}\r\n              >\r\n                {uploading && <Loader />}\r\n              </Form.File>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"brand\">\r\n              <Form.Label>Brand</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter brand\"\r\n                value={brand}\r\n                onChange={e => setBrand(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"countInStock\">\r\n              <Form.Label>Count In Stock</Form.Label>\r\n              <Form.Control\r\n                type=\"number\"\r\n                placeholder=\"Enter countInStock\"\r\n                value={countInStocks}\r\n                onChange={e => setCountInStocks(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"category\">\r\n              <Form.Label>Category</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter category\"\r\n                value={category}\r\n                onChange={e => setCategory(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"description\">\r\n              <Form.Label>Description</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter description\"\r\n                value={description}\r\n                onChange={e => setDescription(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Button type=\"submit\" variant=\"primary\">\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </FormContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductEditScreen;\r\n","import React, { useEffect } from \"react\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { Table, Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport { listOrders } from \"../actions/orderActions\";\r\n\r\nconst OrderListScreen = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const { loading, error, orders } = useSelector(state => state.orderList);\r\n\r\n  const { userInfo } = useSelector(state => state.userLogin);\r\n\r\n  useEffect(() => {\r\n    if (userInfo && userInfo.isAdmin) {\r\n      dispatch(listOrders());\r\n    } else {\r\n      history.push(\"/login\");\r\n    }\r\n  }, [dispatch, history, userInfo]);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Orders</h1>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <Table striped bordered hover responsive className=\"table-sm\">\r\n          <thead>\r\n            <tr>\r\n              <td>ID</td>\r\n              <td>USER</td>\r\n              <td>DATE</td>\r\n              <td>TOTAL</td>\r\n              <td>PAID</td>\r\n              <td>DELIVERED</td>\r\n              <td></td>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {orders.map(order => (\r\n              <tr key={order._id}>\r\n                <td>{order._id}</td>\r\n                <td>{order.user && order.user.name}</td>\r\n                <td>{order.createdAt.substring(0, 10)}</td>\r\n                <td>${order.totalPrice}</td>\r\n                <td>\r\n                  {order.isPaid ? (\r\n                    order.paidAt.substring(0, 10)\r\n                  ) : (\r\n                    <i className=\"fas fa-times\" style={{ color: \"red\" }}></i>\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  {order.isDelivered ? (\r\n                    order.deliveredAt.substring(0, 10)\r\n                  ) : (\r\n                    <i className=\"fas fa-times\" style={{ color: \"red\" }}></i>\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  <LinkContainer to={`/order/${order._id}`}>\r\n                    <Button variant=\"light\" className=\"btn-sm\">\r\n                      Details\r\n                    </Button>\r\n                  </LinkContainer>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OrderListScreen;\r\n","import React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Footer from \"./components/Footer\";\nimport Header from \"./components/Header\";\nimport { Container } from \"react-bootstrap\";\nimport HomeScreen from \"./screens/HomeScreen\";\nimport ProductScreen from \"./screens/ProductScreen\";\nimport CartScreen from \"./screens/CartScreen\";\nimport LoginScreen from \"./screens/LoginScreen\";\nimport RegisterScreen from \"./screens/RegisterScreen\";\nimport ProfileScreen from \"./screens/ProfileScreen\";\nimport ShippingScreen from \"./screens/ShippingScreen\";\nimport PaymentScreen from \"./screens/PaymentScreen\";\nimport PlaceOrderScreen from \"./screens/PlaceOrderScreen\";\nimport OrderScreen from \"./screens/OrderScreen\";\nimport UserListScreen from \"./screens/UserListScreen\";\nimport UserEditScreen from \"./screens/UserEditScreen\";\nimport ProductListScreen from \"./screens/ProductListScreen\";\nimport ProductEditScreen from \"./screens/ProductEditScreen\";\nimport OrderListScreen from \"./screens/OrderListScreen\";\nconst App = () => {\n  return (\n    <Router>\n      <Header />\n      <main className=\"py-3\">\n        <Container>\n          <Route path=\"/\" component={HomeScreen} exact />\n          <Route path=\"/search/:keyword\" component={HomeScreen} exact />\n          <Route path=\"/page/:pageNumber\" component={HomeScreen} exact />\n          <Route\n            path=\"/search/:keyword/page/:pageNumber\"\n            component={HomeScreen}\n          />\n          <Route path=\"/login\" component={LoginScreen} />\n          <Route path=\"/register\" component={RegisterScreen} />\n          <Route path=\"/profile\" component={ProfileScreen} />\n          <Route path=\"/product/:id\" component={ProductScreen} />\n          <Route path=\"/cart/:id?\" component={CartScreen} />\n          <Route path=\"/shipping\" component={ShippingScreen} />\n          <Route path=\"/payment\" component={PaymentScreen} />\n          <Route path=\"/placeorder\" component={PlaceOrderScreen} />\n          <Route path=\"/order/:id\" component={OrderScreen} />\n          <Route path=\"/admin/userlist\" component={UserListScreen} />\n          <Route\n            path=\"/admin/productlist\"\n            component={ProductListScreen}\n            exact\n          />\n          <Route\n            path=\"/admin/productlist/page/:pageNumber\"\n            component={ProductListScreen}\n            exact\n          />\n          <Route path=\"/admin/orderlist\" component={OrderListScreen} />\n          <Route path=\"/admin/product/:id/edit\" component={ProductEditScreen} />\n          <Route path=\"/admin/user/:id/edit\" component={UserEditScreen} />\n        </Container>\n      </main>\n      <Footer />\n    </Router>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport {\r\n  productListReducer,\r\n  productDetailsReducer,\r\n  productDeleteReducer,\r\n  productCreateReducer,\r\n  productUpdateReducer,\r\n  productCreateReviewReducer,\r\n  productTopRatedReducer\r\n} from \"./reducers/productReducers\";\r\nimport { cartReducer } from \"./reducers/cartReducers\";\r\nimport {\r\n  userDeleteReducer,\r\n  userDetailsReducer,\r\n  userListReducer,\r\n  userLoginReducer,\r\n  userRegisterReducer,\r\n  userUpdateProfileReducer,\r\n  userUpdateReducer\r\n} from \"./reducers/userReducers\";\r\nimport {\r\n  orderCreateReducer,\r\n  orderDeliverReducer,\r\n  orderDetailsReducer,\r\n  orderListMyReducer,\r\n  orderListReducer,\r\n  orderPayReducer\r\n} from \"./reducers/orderReducers\";\r\n\r\nconst reducer = combineReducers({\r\n  productList: productListReducer,\r\n  productDetails: productDetailsReducer,\r\n  productDelete: productDeleteReducer,\r\n  productCreate: productCreateReducer,\r\n  productUpdate: productUpdateReducer,\r\n  productCreateReview: productCreateReviewReducer,\r\n  productTopRated: productTopRatedReducer,\r\n  cart: cartReducer,\r\n  userLogin: userLoginReducer,\r\n  userRegister: userRegisterReducer,\r\n  userDetails: userDetailsReducer,\r\n  userUpdateProfile: userUpdateProfileReducer,\r\n  userList: userListReducer,\r\n  userDelete: userDeleteReducer,\r\n  userUpdate: userUpdateReducer,\r\n  orderCreate: orderCreateReducer,\r\n  orderDetails: orderDetailsReducer,\r\n  orderPay: orderPayReducer,\r\n  orderDeliver: orderDeliverReducer,\r\n  orderListMy: orderListMyReducer,\r\n  orderList: orderListReducer\r\n});\r\n\r\nconst cartItemsFromStorage = localStorage.getItem(\"cartItems\")\r\n  ? JSON.parse(localStorage.getItem(\"cartItems\"))\r\n  : [];\r\n\r\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\")\r\n  ? JSON.parse(localStorage.getItem(\"userInfo\"))\r\n  : null;\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem(\"shippingAddress\")\r\n  ? JSON.parse(localStorage.getItem(\"shippingAddress\"))\r\n  : {};\r\n\r\nconst initialState = {\r\n  cart: {\r\n    cartItems: cartItemsFromStorage,\r\n    shippingAddress: shippingAddressFromStorage\r\n  },\r\n  userLogin: { userInfo: userInfoFromStorage }\r\n};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import {\r\n  PRODUCT_CREATE_FAIL,\r\n  PRODUCT_CREATE_REQUEST,\r\n  PRODUCT_CREATE_RESET,\r\n  PRODUCT_CREATE_REVIEW_FAIL,\r\n  PRODUCT_CREATE_REVIEW_REQUEST,\r\n  PRODUCT_CREATE_REVIEW_RESET,\r\n  PRODUCT_CREATE_REVIEW_SUCCESS,\r\n  PRODUCT_CREATE_SUCCESS,\r\n  PRODUCT_DELETE_FAIL,\r\n  PRODUCT_DELETE_REQUEST,\r\n  PRODUCT_DELETE_SUCCESS,\r\n  PRODUCT_DETAIL_FAIL,\r\n  PRODUCT_DETAIL_REQUEST,\r\n  PRODUCT_DETAIL_SUCCESS,\r\n  PRODUCT_LIST_FAIL,\r\n  PRODUCT_LIST_REQUEST,\r\n  PRODUCT_LIST_SUCCESS,\r\n  PRODUCT_TOP_FAIL,\r\n  PRODUCT_TOP_REQUEST,\r\n  PRODUCT_TOP_SUCCESS,\r\n  PRODUCT_UPDATE_FAIL,\r\n  PRODUCT_UPDATE_REQUEST,\r\n  PRODUCT_UPDATE_RESET,\r\n  PRODUCT_UPDATE_SUCCESS\r\n} from \"../constants//productConstants\";\r\n\r\nexport const productListReducer = (state = { products: [] }, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_LIST_REQUEST:\r\n      return { loading: true, products: [] };\r\n    case PRODUCT_LIST_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        products: action.payload.products,\r\n        pages: action.payload.pages,\r\n        page: action.payload.page\r\n      };\r\n    case PRODUCT_LIST_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const productDetailsReducer = (\r\n  state = { product: { reviews: [] } },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case PRODUCT_DETAIL_REQUEST:\r\n      return { loading: true, ...state };\r\n    case PRODUCT_DETAIL_SUCCESS:\r\n      return { loading: false, product: action.payload };\r\n    case PRODUCT_DETAIL_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const productDeleteReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_DELETE_REQUEST:\r\n      return { loading: true };\r\n    case PRODUCT_DELETE_SUCCESS:\r\n      return { loading: false, success: true };\r\n    case PRODUCT_DELETE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const productCreateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_CREATE_REQUEST:\r\n      return { loading: true };\r\n    case PRODUCT_CREATE_SUCCESS:\r\n      return { loading: false, success: true, product: action.payload };\r\n    case PRODUCT_CREATE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case PRODUCT_CREATE_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const productUpdateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_UPDATE_REQUEST:\r\n      return { loading: true };\r\n    case PRODUCT_UPDATE_SUCCESS:\r\n      return { loading: false, success: true, product: action.payload };\r\n    case PRODUCT_UPDATE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case PRODUCT_UPDATE_RESET:\r\n      return { product: {} };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const productCreateReviewReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_CREATE_REVIEW_REQUEST:\r\n      return { loading: true };\r\n    case PRODUCT_CREATE_REVIEW_SUCCESS:\r\n      return { loading: false, success: true };\r\n    case PRODUCT_CREATE_REVIEW_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case PRODUCT_CREATE_REVIEW_RESET:\r\n      return { product: {} };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const productTopRatedReducer = (state = { products: [] }, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_TOP_REQUEST:\r\n      return { loading: true };\r\n    case PRODUCT_TOP_SUCCESS:\r\n      return { loading: false, products: action.payload };\r\n    case PRODUCT_TOP_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  CART_ADD_ITEM,\r\n  CART_REMOVE_ITEM,\r\n  CART_SAVE_PAYMENT_METHOD,\r\n  CART_SAVE_SHIPPING_ADDRESS\r\n} from \"../constants/cartConstant\";\r\n\r\nexport const cartReducer = (\r\n  state = { cartItems: [], shippingAddress: {} },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case CART_ADD_ITEM:\r\n      const item = action.payload;\r\n\r\n      const existItem = state.cartItems.find(x => x.product === item.product);\r\n\r\n      if (existItem) {\r\n        return {\r\n          ...state,\r\n          cartItems: state.cartItems.map(x =>\r\n            x.product === existItem.product ? item : x\r\n          )\r\n        };\r\n      } else {\r\n        return {\r\n          ...state,\r\n          cartItems: [...state.cartItems, item]\r\n        };\r\n      }\r\n    case CART_REMOVE_ITEM:\r\n      return {\r\n        ...state,\r\n        cartItems: state.cartItems.filter(x => x.product !== action.payload)\r\n      };\r\n    case CART_SAVE_SHIPPING_ADDRESS:\r\n      return {\r\n        ...state,\r\n        shippingAddress: action.payload\r\n      };\r\n    case CART_SAVE_PAYMENT_METHOD:\r\n      return {\r\n        ...state,\r\n        paymentMethod: action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  USER_DELETE_FAIL,\r\n  USER_DELETE_REQUEST,\r\n  USER_DELETE_SUCCESS,\r\n  USER_DETAILS_FAIL,\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_RESET,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_LIST_FAIL,\r\n  USER_LIST_REQUEST,\r\n  USER_LIST_RESET,\r\n  USER_LIST_SUCCESS,\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_FAIL,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_UPDATE_FAIL,\r\n  USER_UPDATE_PROFILE_FAIL,\r\n  USER_UPDATE_PROFILE_REQUEST,\r\n  USER_UPDATE_PROFILE_SUCCESS,\r\n  USER_UPDATE_REQUEST,\r\n  USER_UPDATE_RESET,\r\n  USER_UPDATE_SUCCESS\r\n} from \"../constants/userConstants\";\r\n\r\nexport const userLoginReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_LOGIN_REQUEST:\r\n      return { loading: true };\r\n    case USER_LOGIN_SUCCESS:\r\n      return { loading: false, userInfo: action.payload };\r\n    case USER_LOGIN_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case USER_LOGOUT:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_REGISTER_REQUEST:\r\n      return { loading: true };\r\n    case USER_REGISTER_SUCCESS:\r\n      return { loading: false, userInfo: action.payload };\r\n    case USER_REGISTER_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case USER_LOGOUT:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userDetailsReducer = (state = { user: {} }, action) => {\r\n  switch (action.type) {\r\n    case USER_DETAILS_REQUEST:\r\n      return { ...state, loading: true };\r\n    case USER_DETAILS_SUCCESS:\r\n      return { loading: false, user: action.payload };\r\n    case USER_DETAILS_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case USER_DETAILS_RESET:\r\n      return {\r\n        user: {}\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userUpdateProfileReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_UPDATE_PROFILE_REQUEST:\r\n      return { loading: true };\r\n    case USER_UPDATE_PROFILE_SUCCESS:\r\n      return { loading: false, success: true, userInfo: action.payload };\r\n    case USER_UPDATE_PROFILE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userListReducer = (state = { users: [] }, action) => {\r\n  switch (action.type) {\r\n    case USER_LIST_REQUEST:\r\n      return { loading: true };\r\n    case USER_LIST_SUCCESS:\r\n      return { loading: false, users: action.payload };\r\n    case USER_LIST_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case USER_LIST_RESET:\r\n      return {\r\n        users: []\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userDeleteReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_DELETE_REQUEST:\r\n      return { loading: true };\r\n    case USER_DELETE_SUCCESS:\r\n      return { loading: false, success: true };\r\n    case USER_DELETE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userUpdateReducer = (state = { user: {} }, action) => {\r\n  switch (action.type) {\r\n    case USER_UPDATE_REQUEST:\r\n      return { loading: true };\r\n    case USER_UPDATE_SUCCESS:\r\n      return { loading: false, success: true };\r\n    case USER_UPDATE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case USER_UPDATE_RESET:\r\n      return {\r\n        user: {}\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  ORDER_CREATE_REQUEST,\r\n  ORDER_CREATE_SUCCESS,\r\n  ORDER_CREATE_FAIL,\r\n  ORDER_DETAILS_REQUEST,\r\n  ORDER_DETAILS_SUCCESS,\r\n  ORDER_DETAILS_FAIL,\r\n  ORDER_PAY_REQUEST,\r\n  ORDER_PAY_FAIL,\r\n  ORDER_PAY_SUCCESS,\r\n  ORDER_PAY_RESET,\r\n  ORDER_LIST_MY_REQUEST,\r\n  ORDER_LIST_MY_SUCCESS,\r\n  ORDER_LIST_MY_FAIL,\r\n  ORDER_LIST_MY_RESET,\r\n  ORDER_LIST_REQUEST,\r\n  ORDER_LIST_SUCCESS,\r\n  ORDER_LIST_FAIL,\r\n  ORDER_DELIVER_REQUEST,\r\n  ORDER_DELIVER_SUCCESS,\r\n  ORDER_DELIVER_FAIL,\r\n  ORDER_DELIVER_RESET\r\n} from \"../constants/orderConstants\";\r\n\r\nexport const orderCreateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case ORDER_CREATE_REQUEST:\r\n      return {\r\n        loading: true\r\n      };\r\n    case ORDER_CREATE_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        success: true,\r\n        order: action.payload\r\n      };\r\n    case ORDER_CREATE_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const orderDetailsReducer = (\r\n  state = { loading: true, orderItems: [], shippingAddress: {} },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case ORDER_DETAILS_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n    case ORDER_DETAILS_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        order: action.payload\r\n      };\r\n    case ORDER_DETAILS_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const orderPayReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case ORDER_PAY_REQUEST:\r\n      return {\r\n        loading: true\r\n      };\r\n    case ORDER_PAY_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        success: true\r\n      };\r\n    case ORDER_PAY_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload\r\n      };\r\n    case ORDER_PAY_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const orderDeliverReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case ORDER_DELIVER_REQUEST:\r\n      return {\r\n        loading: true\r\n      };\r\n    case ORDER_DELIVER_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        success: true\r\n      };\r\n    case ORDER_DELIVER_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload\r\n      };\r\n    case ORDER_DELIVER_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const orderListMyReducer = (state = { orders: [] }, action) => {\r\n  switch (action.type) {\r\n    case ORDER_LIST_MY_REQUEST:\r\n      return {\r\n        loading: true\r\n      };\r\n    case ORDER_LIST_MY_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        orders: action.payload\r\n      };\r\n    case ORDER_LIST_MY_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload\r\n      };\r\n    case ORDER_LIST_MY_RESET:\r\n      return {\r\n        orders: []\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const orderListReducer = (state = { orders: [] }, action) => {\r\n  switch (action.type) {\r\n    case ORDER_LIST_REQUEST:\r\n      return {\r\n        loading: true\r\n      };\r\n    case ORDER_LIST_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        orders: action.payload\r\n      };\r\n    case ORDER_LIST_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"./bootstrap.min.css\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}